{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-complete-guide\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [count, updatecount] = useState(1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"The button is clicked \", count, \" time\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        updatecount(count + 1);\n      },\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n\n/*import React from 'react';\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { value: \"Welcome\", name: \"guys\" };\r\n  }\r\n  componentWillMount() {\r\n    alert(\"Learn JS\");\r\n  }\r\n  render() {\r\n    return <div>\r\n      <h1>{this.state.value} {this.state.name}</h1>\r\n      <button type=\"button\" onClick={this.updatebtn}>Click</button>\r\n      <button type=\"button\" onClick={this.deletebtn}>Delete Header</button>\r\n    </div>\r\n  }\r\n  updatebtn = () => {\r\n    this.setState({ value: \"Love you\" });\r\n  }\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.setState({ value: \"Thankyou\" })\r\n    }, 5000);\r\n  }\r\n  componentWillUpdate() {\r\n    alert(\"Do you want to update?\");\r\n  }\r\n  componentDidUpdate() {\r\n    document.getElementById('mydiv').innerHTML = \"UPDATED SUCCESSFULL!!!\";\r\n  }\r\n  shouldComponentUpdate() {\r\n    return true;\r\n  }\r\n  deletebtn = () => {\r\n    this.setState({ value: false, name: false });\r\n  }\r\n    componentWillUnmount() {\r\n      alert(\"Deleted\");\r\n    }\r\n  }*/\n\n/*class App extends React.Component{\r\n  constructor() {\r\n    super();\r\n    this.state = { name: \"\" };\r\n  }\r\n  render() {\r\n    return (\r\n      < form onSubmit={this.usersubmit}  >\r\n        <h1>Welcome {this.state.name}</h1>\r\n            <label Forhtml=\"a\">Enter Your Username:</label><input type=\"text\" placeholder=\"enter ur username\" onChange={this.uservalue}/><br></br>\r\n            <button type=\"submit\">Submit</button>\r\n    </form    >\r\n    )\r\n  }\r\n  uservalue = (event) => {\r\n    this.setState({ name: event.target.value });\r\n    }\r\n    usersubmit = (event) => {\r\n        event.preventDefault();\r\n        alert(\"Check your details:\");\r\n        alert(\"1.Username: \" + this.state.name);\r\n        \r\n    }\r\n    \r\n}*/\n_s(App, \"0L1+6hLUywdyiPwGNAeeSl+4b+Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","count","updatecount"],"sources":["C:/react-complete-guide/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nfunction App() {\r\n  const [count, updatecount] = useState(1);\r\n  return (\r\n    <div>\r\n\r\n      <p>The button is clicked {count} time</p>\r\n      <button onClick={() => { updatecount(count + 1) }}>Click</button>\r\n      \r\n    </div>\r\n    \r\n ) \r\n}\r\n\r\n\r\n/*import React from 'react';\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { value: \"Welcome\", name: \"guys\" };\r\n  }\r\n  componentWillMount() {\r\n    alert(\"Learn JS\");\r\n  }\r\n  render() {\r\n    return <div>\r\n      <h1>{this.state.value} {this.state.name}</h1>\r\n      <button type=\"button\" onClick={this.updatebtn}>Click</button>\r\n      <button type=\"button\" onClick={this.deletebtn}>Delete Header</button>\r\n    </div>\r\n  }\r\n  updatebtn = () => {\r\n    this.setState({ value: \"Love you\" });\r\n  }\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.setState({ value: \"Thankyou\" })\r\n    }, 5000);\r\n  }\r\n  componentWillUpdate() {\r\n    alert(\"Do you want to update?\");\r\n  }\r\n  componentDidUpdate() {\r\n    document.getElementById('mydiv').innerHTML = \"UPDATED SUCCESSFULL!!!\";\r\n  }\r\n  shouldComponentUpdate() {\r\n    return true;\r\n  }\r\n  deletebtn = () => {\r\n    this.setState({ value: false, name: false });\r\n  }\r\n    componentWillUnmount() {\r\n      alert(\"Deleted\");\r\n    }\r\n  }*/\r\n\r\n\r\n/*class App extends React.Component{\r\n  constructor() {\r\n    super();\r\n    this.state = { name: \"\" };\r\n  }\r\n  render() {\r\n    return (\r\n      < form onSubmit={this.usersubmit}  >\r\n        <h1>Welcome {this.state.name}</h1>\r\n            <label Forhtml=\"a\">Enter Your Username:</label><input type=\"text\" placeholder=\"enter ur username\" onChange={this.uservalue}/><br></br>\r\n            <button type=\"submit\">Submit</button>\r\n    </form    >\r\n    )\r\n  }\r\n  uservalue = (event) => {\r\n    this.setState({ name: event.target.value });\r\n    }\r\n    usersubmit = (event) => {\r\n        event.preventDefault();\r\n        alert(\"Check your details:\");\r\n        alert(\"1.Username: \" + this.state.name);\r\n        \r\n    }\r\n    \r\n}*/\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AACxC,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,WAAW,CAAC,GAAGH,QAAQ,CAAC,CAAC,CAAC;EACxC,oBACE;IAAA,wBAEE;MAAA,qCAA0BE,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAU,eACzC;MAAQ,OAAO,EAAE,MAAM;QAAEC,WAAW,CAACD,KAAK,GAAG,CAAC,CAAC;MAAC,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAe;EAAA;IAAA;IAAA;IAAA;EAAA,QAE7D;AAGV;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA,GAxDSD,GAAG;AAAA,KAAHA,GAAG;AAiFZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}